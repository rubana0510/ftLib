apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'io.fabric'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    dataBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.feedbacktower"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 65
        versionName "1.2.6.5"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildTypes.each {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())

            def prodServerBaseUrl = properties.getProperty("prod_server_base_url", "")
            it.buildConfigField 'String', "PROD_SERVER_BASE_URL", prodServerBaseUrl
            it.resValue 'string', "prod_server_base_url", prodServerBaseUrl

            def prodS3BaseUrl = properties.getProperty("prod_s3_base_url", "")
            it.buildConfigField 'String', "PROD_S3_BASE_URL", prodS3BaseUrl
            it.resValue 'string', "prod_s3_base_url", prodS3BaseUrl

            def prodMerchantKey = properties.getProperty("prod_merchant_key", "")
            it.buildConfigField 'String', "PROD_MERCHANT_KEY", prodMerchantKey
            it.resValue 'string', "prod_merchant_key", prodMerchantKey

            def prodMerchantId = properties.getProperty("prod_merchant_id", "")
            it.buildConfigField 'String', "PROD_MERCHANT_ID", prodMerchantId
            it.resValue 'string', "prod_merchant_id", prodMerchantId

            def devServerBaseUrl = properties.getProperty("dev_server_base_url", "")
            it.buildConfigField 'String', "DEV_SERVER_BASE_URL", devServerBaseUrl
            it.resValue 'string', "dev_server_base_url", devServerBaseUrl

            def devS3BaseUrl = properties.getProperty("dev_s3_base_url", "")
            it.buildConfigField 'String', "DEV_S3_BASE_URL", devS3BaseUrl
            it.resValue 'string', "dev_s3_base_url", devS3BaseUrl

            def devMerchantKey = properties.getProperty("dev_merchant_key", "")
            it.buildConfigField 'String', "DEV_MERCHANT_KEY", devMerchantKey
            it.resValue 'string', "dev_merchant_key", devMerchantKey

            def devMerchantId = properties.getProperty("dev_merchant_id", "")
            it.buildConfigField 'String', "DEV_MERCHANT_ID", devMerchantId
            it.resValue 'string', "dev_merchant_id", devMerchantId




            def placesApiKey = properties.getProperty("places_api_key", "")
            it.buildConfigField 'String', "PLACES_API_KEY", placesApiKey
            it.resValue 'string', "places_api_key", placesApiKey
        }
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
        debugMini {
            initWith debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
            matchingFallbacks = ['debug']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupportVersion"
    implementation "androidx.vectordrawable:vectordrawable:$rootProject.vectorDrawablesVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.supportLibraryVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "android.arch.work:work-runtime-ktx:$rootProject.workVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha05"
    implementation "androidx.preference:preference:$rootProject.supportLibraryVersion"

    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitGsonVersion"

    //kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"

    //anko commons
    implementation "org.jetbrains.anko:anko-commons:$rootProject.ankoCommonsVersion"

    //glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    //databinding
    kapt "com.android.databinding:compiler:$rootProject.androidPluginVersion"

    //rx java
    implementation "io.reactivex.rxjava2:rxjava:2.1.0"

    //qr
    implementation 'com.google.zxing:core:3.3.3'

    //payu
    implementation 'com.payumoney.sdkui:plug-n-play:1.6.0'

    //firebase
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    //filepicker
    implementation 'com.zhihu.android:matisse:0.5.1'

    //jodatime
    implementation 'joda-time:joda-time:2.10.2'

    //videotrimmer
    implementation 'com.googlecode.mp4parser:isoparser:1.1.20'

    //exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$rootProject.exoPlayerVersion"

    //location
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    implementation "androidx.exifinterface:exifinterface:1.0.0"

//room
    implementation "androidx.room:room-runtime:2.1.0"
    kapt "androidx.room:room-compiler:2.1.0"

    //cropper
    implementation 'com.github.yalantis:ucrop:2.2.3'
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
    //zoomy: for image zoom
    implementation 'com.ablanco.zoomy:zoomy:1.1.0'

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //viewpager2 for ads
    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta02'

    //another picker
    implementation 'net.alhazmy13.MediaPicker:libary:2.4.4'

    //test
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"

    //compile files('libs/isoparser-1.0.6.jar')
    //compile files('libs/aspectjrt-1.7.3.jar')

    //temp fix for screen blank issue
    def lifecycle_version = "2.2.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
}

apply plugin: 'com.google.gms.google-services'
